http://blog.csdn.net/phdat101/article/details/53000036
这篇主要介绍Object Detection一些经典的网络结构。
顺序是RCNN->SPP->Fast RCNN->Faster RCNN->YOLO->SSD->YOLO2->Mask RCNN。
这里只粗糙地介绍网络构型变化。更多细节强烈推荐阅读原文。


斯坦福李飞飞-深度学习计算机视觉   网易云课堂
http://study.163.com/course/introduction.htm?courseId=1003223001


RCNN
http://blog.csdn.net/cyiano/article/details/69950331
 1 ss算法产生候选区域
 2 对每个候选区域（reshape成 27*227）用CNN网络提取特征  输入 227*227   输出 4096维特征
 3 SVM对特征向量进行分类

SPP网络 网络
http://blog.csdn.net/xjz18298268521/article/details/52681966
 1 ss 算法产出候选区域 ROI
 2 对整张图 使用CNN网络 提取特征图
 3 ROI对应的特征区域 进入SPP网络
  （基于1算法生成的候选区域框在特征图上裁剪出来  (x,y)=(S*x’,S*y’) 
   分别在每个区域最大值池化  
   使用空间金字塔结构 提取 4*4 + 2*2 + 1 = 21 组特征
   21*256 维度   256 为CNN卷积层 卷积核个数）
   
 4 SVM对特征向量进行分类

########
以上基于SVM进行分类
#######
以下直接使用网络 进行分类


Fast RCNN
http://blog.csdn.net/cyiano/article/details/70141957
   1 ss 算法产出候选区域（region of interest, ROI）
   2 对整张图像使用 CNN 提取出提取出feature map
   3 ROI对应的特征区域 进入Fast RCNN网络
    （先通过 ROI pooling层 框定（固定）尺寸， 
      通过一些全连接层得到ROI feature vector，
      ROI feature vector 分别进如两个不同的全连接层，
      一个得到softmax 类别概率 分类结果，
      一个得到regression回归bounding box 边界框）
   
注意：
 【1】ROI pooling层为亮点，功能 将任意大小的矩形区域（特征图map）
     通过池化转变为统一的大小。
     假如输出固定尺寸是H * W，则上一层的任何一个矩形框ROI都被平均分割为H * W个小块，
     每个小块进行一次max pooling操作，选出小块中的最大值。 
 【2】多任务损失函数 Mutil_Task_Loss = L_class + L_loction
L_muti =  L_class(class_predict预测的类别,class_true真实类别)  +  
          正则项 × L_loction(bb_predict预测的边界框，bb_true真实的边界框)

 1）类别预测损失：L_class(class_predict预测的类别 p , class_true真实类别 u) 
    http://blog.csdn.net/google19890102/article/details/49738427
    多分类 softmax回归器 L_class(p,u)=
     j为类别数 1，2，...,K
    p（y(i)=j）|X(i);cet) = exp(cet(j)*X(j))/(sum(exp(cet(j)*X(j)))) 
   总结就是对于每一个输出 X(j) 对于每一类都有一个输出 exp(cet(j)*X(j))
   那么 对于是j类的概率就为 exp(cet(j)*X(j))/(sum(exp(cet(j)*X(j))))

  误差就是  sum（log(p（y(i)=j）|X(i);cet)(预测不正确的)))）

此处就是不断调整cet的参数

2）边界框预测损失
   sum(smooth_L1(bb_predict,bb_true))


################################################
###################################################
###  以上给予 ss算法产生候选框
###  以下基于 RPN(Region Proposal Network) 代替之前的 Selective Search  产生候选框
Faster RCNN
http://blog.csdn.net/cyiano/article/details/70161959

   1 对整张图像使用 CNN 提取出提取出feature map
   1 feature map----> RPN(Region Proposal Network) 代替之前的 Selective Search 算法 产生候选区域 ROI
     切RPN网络与检测网络共享特征
   3 ROI对应的特征区域 进入Fast RCNN网络
    （先通过 ROI pooling层 框定（固定）尺寸， 
      通过一些全连接层得到ROI feature vector，
      ROI feature vector 分别进如两个不同的全连接层，
      一个得到softmax 类别概率 分类结果，
      一个得到regression回归bounding box 边界框）


image ————> 卷积网络CNN ————> 特征图Feature Map ————> 
区域提取网络 RPN ————>ROI Polling层得到---> 256维 特征向量 Feature Vector ————>
 |————> 类别层     分类 得分
 |————> 边界框层   区域坐标 


可以发现，候选区域的提取从预处理（SS）变成了后续处理（RPN）。
RPN完全包含在整个卷积神经网络之中，模型大大得到了简化。

CNN部分
    CNN部分采用在分类方面效果良好的网络就足够了。作者选择了两种网络：ZF 和 VGG。
   前者有5层可以共享参数的卷积层，而后者有13层。CNN部分的输出应该是一个W*H*R的特征图。

RPN部分

 在conv feature map 上划窗Sliding Window
 每个中心点预测 k=9个 不同尺寸 长宽比的 框
 每个框 有四个框参数（中心点,长，宽） 以及2个类别参数 是物体、不是物体 


http://blog.csdn.net/sloanqin/article/details/51545125
详细过程

共享网络
CNN 5层 卷积池化网络

input   224*224*3   大小224像素×224像素  RGB三通道
第一层：
    卷积层： 7*7*3*96  7*7 的卷积核尺寸 卷积滑动是步幅为2 输入3个通道 共有 96个卷积核
             输出 110*110*96      (224-7+pad填充)/2 + 1  除以2 应为步幅为2  
             每个卷积核对3上一层3通道图像卷积后平均 得到96个输出   pad数量不定 为了整除，进行填充
    池化层： 池化核大小 3*3 步幅为2 所以输出为  55*55*96
             (110-3+pad)/2 + 1 =55

第二层：
    卷积层：5*5*96*256  5*5卷积核尺寸 卷积滑动是步幅为2 输入96个通道 共有 256个卷积核
           输出： 26*26*256
    池化层：池化核大小 3*3 步幅为2 所以输出为  13*13*256   （26-3+pad）/2+1=13

第三层：
    卷积层: 3*3*256*384 3*3卷积核尺寸 卷积滑动是步幅为1 输入256个通道 共有384个卷积核
           输出 13*13*384

第四层：
    卷积层: 3*3*384*384 3*3卷积核尺寸 卷积滑动是步幅为1 输入384个通道 共有384个卷积核
           输出 13*13*384

第五层：
    卷积层: 3*3*384*256 3*3卷积核尺寸 卷积滑动是步幅为1 输入384个通道 共有256个卷积核
           输出 13*13*256
 
前五层卷积池化成 分类网络和 rpn网络共享
  
#################################################
    第五层的卷积层 输出直接进入 RPN网络 提取候选框
##################################################
    池化层：池化核大小 3*3 步幅为2 所以输出为  6*6*256   （13-3+pad）/2+1=6
    
第六层：
    全连接层：
    6*6*256
第七层：
    全连接层：
    6*6*256

第八层：
    softmax回归层


RPN网络：
输入：13*13*256
    第一层：
        卷积层： 3*3*256*256       3*3卷积核尺寸 卷积滑动是步幅为1 pad=1 输入256个通道 共有256个卷积核
              输出 12*12*256     (13-3+1）/1 +1 = 12
        非线性激活层


    第二 1层（类别预测层）： 
        上接第一层卷积层输出 12*12*256  256个Feature map 每个feature map 12*12
        每个像素点 是物体、不是物体=2  共提取9种框  2*9=18个输出
        卷积层： 1*1*256*18的卷积核 1*1卷积核尺寸 卷积滑动是步幅为1 pad=0 输入256个通道 共有18个卷积核


注意：9种框 3中尺寸（128、256、512）×三种

    第二 2层（框预测层）
       上接第一层卷积层输出 12*12*256
       每个框 4个参数  每个点预测9个  4*0=36
       卷积层： 1*1*256*36的卷积核 1*1卷积核尺寸 卷积滑动是步幅为1 pad=0 输入256个通道 共有36个卷积核


   第三层
      类别预测层__重变形 reshape

##############################################
################################################
Mask RCNN
http://blog.csdn.net/cyiano/article/details/73571678





